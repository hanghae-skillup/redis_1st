plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management' // 루트의 dependency-management 상속
    id 'jacoco'
}

group = 'com.cinema'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation project(':cinema-application')
    implementation project(':cinema-core')
    implementation project(':cinema-common')
    implementation project(':cinema-infra')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.fasterxml.jackson.core:jackson-databind'    // webConfig 설정

    // Spring Retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'  // AOP 활성화 필요

    // Google Guava RateLimiter
    implementation 'com.google.guava:guava:32.0.0-jre'

    // Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.21.0'
}

tasks.named('bootJar') {
    mainClass = 'com.cinema.CinemaApplication'
}

tasks.jacocoTestReport {
    dependsOn test // test 실행 후 보고서 생성
    reports {
        xml.required = true
        csv.required = false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

tasks.jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.60 // 최소 60% 커버리지 필요
            }
        }
    }
}