plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

bootJar.enabled = false // 빌드시 현재 모듈(multi-module)의 .jar를 생성하지 않습니다.

repositories {
	mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
	group 'org.example'
	version '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		// Test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// JPA
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		// Web
		implementation 'org.springframework.boot:spring-boot-starter-web'

		// MySql
		runtimeOnly 'mysql:mysql-connector-java:8.0.28' // mysql8

		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Caffeine
		implementation 'org.springframework.boot:spring-boot-starter-cache'
		implementation 'com.github.ben-manes.caffeine:caffeine:3.1.7'

		// Redis
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

		// Reddison
		implementation 'org.redisson:redisson-spring-boot-starter:3.22.1'

		// queryDSL
		implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

		annotationProcessor("jakarta.persistence:jakarta.persistence-api")
		annotationProcessor("jakarta.annotation:jakarta.annotation-api")

		// validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'
	}

	test {
		useJUnitPlatform()
	}
}