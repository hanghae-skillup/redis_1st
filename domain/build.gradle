plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.7'
  id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hh'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  // queryDSL 설정
  implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  implementation "com.querydsl:querydsl-core:5.0.0"
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"


  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'jakarta.persistence:jakarta.persistence-api'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

// querydsl 적용
def generated='src/main/generated'

// querydsl QClass 파일 위치를 잡아주는 설정
tasks.withType(JavaCompile) {
  options.getGeneratedSourceOutputDirectory().set(file(generated))
}


// java source set 에 querydsl QClass 위치 추가
sourceSets {
  main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
  delete file(generated)
}

tasks.register("prepareKotlinBuildScriptModel") {}

tasks.bootJar {enabled = false}
tasks.jar {enabled = true}